<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nbicc.gywlw.mapper.GywlwProjectUserGroupMapper" >
  <resultMap id="BaseResultMap" type="com.nbicc.gywlw.Model.GywlwProjectUserGroup" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="write_permission" property="writePermission" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />

  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, user_id, write_permission, create_time
  </sql>
  <select id="selectByProjectId" resultMap="BaseResultMap" parameterType="com.nbicc.gywlw.Model.GywlwProjectUserGroup" >
  select
  <include refid="Base_Column_List" />
  from gywlw_project_user_group
  where project_id = #{projectId,jdbcType=VARCHAR} and del_mark = 0
  ORDER BY create_time DESC
  LIMIT #{offset},#{limit}
</select>
  <select id="selectByProjectIdAndUserId" resultMap="BaseResultMap" parameterType="com.nbicc.gywlw.Model.GywlwProjectUserGroup" >
    select
    <include refid="Base_Column_List" />
    from gywlw_project_user_group
    where project_id = #{projectId,jdbcType=VARCHAR} and del_mark = 0 And user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByProjectIdAndUserId" parameterType="java.lang.String" >
    delete from gywlw_project_user_group
    where project_id = #{projectId,jdbcType=VARCHAR} AND user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.nbicc.gywlw.Model.GywlwProjectUserGroup" >
    insert into gywlw_project_user_group (project_id, user_id,
      write_permission
      )
    values (#{projectId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
      #{writePermission,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nbicc.gywlw.Model.GywlwProjectUserGroup" >
    insert into gywlw_project_user_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="writePermission != null" >
        write_permission,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="delMark != null" >
        del_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="writePermission != null" >
        #{writePermission,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delMark != null" >
        #{delMark,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nbicc.gywlw.Model.GywlwProjectUserGroup" >
    update gywlw_project_user_group
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="writePermission != null" >
        write_permission = #{writePermission,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delMark != null" >
        del_mark = #{delMark,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nbicc.gywlw.Model.GywlwProjectUserGroup" >
    update gywlw_project_user_group
    set project_id = #{projectId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      write_permission = #{writePermission,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_mark = #{delMark,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>